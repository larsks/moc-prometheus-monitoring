---
version: "3"

volumes:
  postgres_data:
  prometheus_data_main:
  prometheus_data_archive:
  grafana_data:

services:
  postgres:
    image: timescale/pg_prometheus:latest-pg11
    environment:
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
    volumes:
      - "postgres_data:/var/lib/postgresql/data"
    ports:
      - "5432:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 1s
      timeout: 5s
      retries: 10
    restart: always

  postgres_exporter:
    image: wrouesnel/postgres_exporter
    environment:
      DATA_SOURCE_URI: "postgres?sslmode=disable"
      DATA_SOURCE_USER: "postgres"
      DATA_SOURCE_PASS: "${POSTGRES_PASSWORD}"
      DATA_SOURCE_WEB_LISTEN_ADDRESS: ":9187"
      PG_EXPORTER_AUTO_DISCOVER_DATABASES: "true"
      PG_EXPORTER_EXCLUDE_DATABASES: "template0,template1"

  prom_pg_adapter:
    image: timescale/prometheus-postgresql-adapter:latest
    command: >-
      -pg-host=postgres -pg-password=${POSTGRES_PASSWORD} -log-level warn
    restart: always

  prom_main:
    image: prom/prometheus
    ports:
      - "9090:9090"
    volumes:
      - "prometheus_data_main:/prometheus"
      - "./prometheus_main_config:/etc/prometheus"
    restart: always
    command: >-
      --config.file=/etc/prometheus/prometheus.yml
      --storage.tsdb.path=/prometheus
      --web.console.libraries=/usr/share/prometheus/console_libraries
      --web.console.templates=/usr/share/prometheus/consoles
      --storage.tsdb.min-block-duration=2h
      --storage.tsdb.max-block-duration=2h

  prom_archive:
    image: prom/prometheus
    ports:
      - "9191:9090"
    volumes:
      - "prometheus_data_archive:/prometheus"
      - "./prometheus_archive_config:/etc/prometheus"
    restart: always

  grafana:
    image: grafana/grafana
    ports:
      - "3000:3000"
    volumes:
      - "grafana_data:/var/lib/grafana"
      - "./grafana_provisioning:/etc/grafana/provisioning"
    restart: always

  cinder_exporter:
    image: larsks/cinder-exporter
    volumes:
      - ./openstack:/etc/openstack
    command: -v --os-cloud kaizen
    restart: always

  keystone_exporter:
    image: larsks/keystone-exporter
    volumes:
      - ./openstack:/etc/openstack
    command: -v --os-cloud kaizen
    restart: always

  thanos_sidecar:
    image: thanosio/thanos
    volumes:
      - prometheus_data_main:/prometheus
      - ./thanos:/etc/thanos
    command: >-
      sidecar
      --prometheus.url http://prom_main:9090
      --tsdb.path /prometheus
      --objstore.config-file /etc/thanos/bucket_config.yml
      --http-address 0.0.0.0:19191
      --grpc-address 0.0.0.0:19090

  thanos_store:
    image: thanosio/thanos
    volumes:
      - ./thanos:/etc/thanos
    command: >-
      store
      --data-dir /var/thanos/cache
      --objstore.config-file /etc/thanos/bucket_config.yml
      --http-address 0.0.0.0:19191
      --grpc-address 0.0.0.0:19090

  thanos_query:
    image: thanosio/thanos
    command: >-
      query
      --http-address 0.0.0.0:19192
      --store thanos_sidecar:19090
      --store thanos_store:19090
    ports:
      - 19192:19192

  thanos_compactor:
    image: thanosio/thanos
    volumes:
      - ./thanos:/etc/thanos
    command: >-
      compact
      --data-dir /var/thanos/compact
      --objstore.config-file /etc/thanos/bucket_config.yml
      --http-address 0.0.0.0:19191
      -w
